#+OPTIONS: ^:{}
Attempt to put together all that I have previously done on metal recombination lines, particularly in Orion


* Dielectronic fluorescence
+ Is this possible?
+ Based on radiative stabilization of 2-electron auto-ionizing states

* Empirical evidence from planetary nebulae
+ Papers
  + Garnett:2001a
    + Imaging of Ring Nebula NGC 6720
    + Find that O II is highest towards the inside of the [O III] shell
    + They try to explain this by high-T di-electronic recombination at the interface between photoionized shell and hot bubble
      + But they can't get this to work
      + *and* there is no hot bubble there, since they are ignoring the He II photoionized zone that is inside the [O III] zone
        + any hot bubble is very small and corresponds to the inner dip in He II
        + the O II comes from the outer part of the He II zone
  + Richer:2013a
  + Garcia-Rojas:2016b
    + Imaging of NGC 6678
    + This has ADF ~ 20 and is close binary, so may fall under Wesson:2018a explanation
    + Clear difference between emission of O II V1 and [O III] 5007 with O II being on inside rim of the main emission shell
    + Weird that [O III] 4363 has similar morphology to the O II lines
      + They try to interpret this as being high-T and high-n (so 5007 is suppressed), but this would mean very high pressure, which is hard to believe
      + And it would be impossible to get the 4363/5007 ratio high enough I think
  + Richer:2017a
  + Pena:2017a
  + Richer:2019a


** Arguments against an atomic physics solution
+ Wesson:2018a look at extreme-adf nebulae (ADF = 5 \to 100)
  + They find that these tend to be close binary stars
  + Also find anti-correlation with density
  + Say due to nova explosions, enriched in CNONe but not 3rd row elements
  + /However/ this is for the most extreme ADFs, and we already knew that there are high-metallicity knots in objects like A30
    + There is still room for explaining more moderate ADF factors in PNe and HII regions
    + They take an ADF < 5 to be "normal"



* Fluorescent lines
+ Grandi:1976a has a good summary
  + All the O II lines are listed as recombination
  + Most of N II are mixture of starlight and recomb
  + All Si II are starlight
    + I have rgb image of 5041, 5056, and 6347 in MUSE project
  + C II 7236 is both but 4267 should be pure recombination
  + The maps of the fluorescent lines like Si II and C II seem to trace the inner surface of various structures in the nebula
    + They show beautiful little twirly filaments


* The O I 7773 recombination line
* Older stuff that was new at the time [2017-10-24 Tue]


** Renaming the multibin project?
+ SAOImage DS9 uses /block/ instead of /bin/, so maybe we should use that
+ One possibility is *binblock* For *bin*-ary *block*-ing
+ That way we have the best of both worlds
+ Or *quadblock* or *tetrablock*
  + I like the second - combination of tetrapack and megablock
  + Reflects fact that each block level is by 2x2
  + And strangely, there are not many things called tetrablock
** Who to include in project
+ If interested
  + Michael Richer
  + César 
  + Jorge García
  + Ana Monreal-Ibero?
  + Grazyna?
  + Gary, Peter, et al?
  + Miriam?
  + Peimberts?

** What are the advantages/disadvantages of each dataset?
+ Spectral range
  + Blue
    + Manu best (from 3600 \AA)
    + Adal from 4250 \AA
    + MUSE from 4600 \AA
  + Red
    + MUSE best (to 9300 \AA)
    + Adal up to 7000 \AA
    + Manu up to 6800 \AA
+ Spectral resolution
  + Adal best: resolve N II from O II from N III @ 4642 \AA
  + Manu next
  + MUSE worst
+ Spatial coverage
  + MUSE best (full field)
  + Manu next -
  + Adal worst - limited to 6 longslit positions
+ Spatial resolution
  + MUSE best (sub-arcsec)
    + But often necessary to degrade in order to achieve good s/n
  + Adal next (about 1 arcsec)
  + Manu worst (fiber spacing about 3 arcsec)
+ Signal-to-noise
  + Manuel best (I think)
  + MUSE worst



** Other lines to look into 

*** O II doublet 4414.9, 4416.8
+ Bluer line is clearly visible in Adal spectra, right next to a [Fe II] line, but clearly separable
+ Redder line is half the strength, and is right under another [Fe II] line, so will be very hard to measure
+ Vladimir has them being 82% recombination
*** N I multiplet 8212, 8216.34, 8223.14
+ These look like they are recombination
** Theoretical line strengths
*** TODO Get O II line strengths vs (n, T) from Storey (2017)
+ They have a fortran program to extract lines from their data base
+ Everything is here: [[file:Storey-2017/]] (but not on GitHub since too big)
*** TODO N II line strengths from Fang et al (2011)
+ Data is on Vizier:
  + http://vizier.cfa.harvard.edu/viz-bin/VizieR?-source=J/A+A/530/A18
+ There is a way to directly grab the data files into astropy tables
  + Example from [[id:37783AC4-74A2-48EC-AE19-006509FEA4F5][Stellar bow shock project]]
    #+BEGIN_SRC python
      SOURCE_DIR = 'OB/Kobulnicky2016'
      source_table = Table.read(
          os.path.join(SOURCE_DIR, 'table1.dat'),
          format='ascii.cds',
          readme=os.path.join(SOURCE_DIR, 'ReadMe')
      )
    #+END_SRC
*** DONE O I recombination line strengths from Pequignot et al (1991)
CLOSED: [2017-10-28 Sat 15:59]
:PROPERTIES:
:ID:       01887326-EFF3-4C42-ABEB-9EC5056B0947
:END:
+ Simple functional fit to effective recombination rates
+ Equation
  \[
  \alpha = 10^{{-13}} \, z\,  \frac{a t^{b}}{1 + c t^{d}}
  \]
+ with \(z\) as ion charge (1 for O I) and \(t = 10^{-4} \, T/z^{2}\)
+ Co-efficients for O I 3s .^{5}S^0 - 3s .^{5}P
  | Ion | line | Case |     a |      b |     c |     d |  Br | Q |     Y |
  |-----+------+------+-------+--------+-------+-------+-----+---+-------|
  | O I | 7773 | A    | 1.983 | -0.630 | 0.971 | 0.573 | 1.0 | B | 1.006 |
+ So, this is best done with ~pyneb~, as is everything else



*** [O II] collisional line strengths
+ Use ~pyneb~ I guess
+ Strangely, the emission coefficients increase with density, according to pyneb
+ [X] ~pyneb~ still works better with python 2.7
  + With python 3 there are some bugs with the O I recomb spectrum
  + I have installed an anaconda environment ~pyneb27~ to hold it
    : python=2.7 ipython=5.4
+ Here is a plot of ratio against T for varying density
#+BEGIN_SRC python :eval no :tangle oplus-ratio-plot.py
  from __future__ import print_function
  import sys
  import numpy as np
  import pyneb as pn
  import matplotlib.pyplot as plt
  import seaborn as sns

  o1r = pn.RecAtom('O', 1, case='A')
  o2c = pn.Atom('O', 2)

  Ts = np.linspace(5000, 15000)
  Ds = 10**np.linspace(0.0, 7.0, 8)

  def ratio_7773_7330(tem, den):
      em7330 = o2c.getEmissivity(tem, den, wave=7330.73)
      em7330 += o2c.getEmissivity(tem, den, wave=7329.66)
      em7773 = o1r.getEmissivity(tem, den, label='7773+')
      return em7773/em7330


  figfile = sys.argv[0].replace('.py', '.pdf')
  nD = len(Ds)
  sns.set_palette('magma_r', n_colors=nD)
  lws = np.linspace(2.0, 0.5, nD)
  fig, ax = plt.subplots()

  for D, lw in zip(Ds, lws):
      dstring = str(np.log10(D))
      label = r"$n = 10^{" + dstring + r"}\ \mathrm{cm}^{-3}$"
      ax.plot(Ts, ratio_7773_7330(Ts, D), lw=lw, label=label)

  ax.legend(ncol=2)

  ax.set(
      xlabel="Temperature, K",
      ylabel="O I 7773 / [O II] 7330",
      yscale='log',
  )
  sns.despine()
  fig.tight_layout()
  fig.savefig(figfile)
  print(figfile, end='')
#+END_SRC

#+BEGIN_SRC sh :results file
source activate pyneb27
python oplus-ratio-plot.py
#+END_SRC

#+RESULTS:
[[file:oplus-ratio-plot.pdf]]

+ Alternatively, contours of the ratio in the T, N plane

#+BEGIN_SRC python :eval no :tangle oplus-ratio-contour.py
  from __future__ import print_function
  import sys
  import numpy as np
  import pyneb as pn
  import matplotlib.pyplot as plt
  import matplotlib as mpl
  import seaborn as sns

  o1r = pn.RecAtom('O', 1, case='A')
  o2c = pn.Atom('O', 2)

  Ts = np.linspace(4000, 20000, 300)
  Ds = 10**np.linspace(1.0, 9.0, 200)

  def ratio_7773_7330(tem, den):
      em7330 = o2c.getEmissivity(tem, den, wave=7330.73)
      em7330 += o2c.getEmissivity(tem, den, wave=7329.66)
      em7773 = o1r.getEmissivity(tem, den, label='7773+')
      return em7773/em7330


  figfile = sys.argv[0].replace('.py', '.pdf')

  ratios = ratio_7773_7330(Ts, Ds)
  levels = [3.0, 1.0, 0.3, 0.1, 0.03, 0.01, 0.003, 0.001, 0.0003]
  fig, ax = plt.subplots(figsize=(6, 6))

  Ts = Ts[:, None]*np.ones_like(ratios)
  Ds = Ds[None, :]*np.ones_like(ratios)

  #ax.contour(Ts, Ds, Ds, levels=[100, 10000, 1e6], cmap='magma_r')
  c = ax.contour(Ds, Ts, ratios,
                 levels=levels[::-1],
                 cmap='tab20b_r', linewidths=3,
                 norm=mpl.colors.LogNorm())
  # ax.clabel(c, levels[1::2], fontsize='x-small',
  #           inline=False, rightside_up=True, use_clabeltext=True)
  cb = fig.colorbar(c, orientation='horizontal')
  cb.set_label("O I 7773 / [O II] 7330")
  # ax.annotate("O I 7773 / [O II] 7330", (1e4, 18000))

  ax.set(
      ylabel="Temperature, K",
      xlabel="Density, cm$^{-3}$",
      xscale='log',
  )
  sns.despine()
  fig.tight_layout()
  fig.savefig(figfile)
  print(figfile, end='')
#+END_SRC

#+BEGIN_SRC sh :results file
source activate pyneb27
python oplus-ratio-contour.py
#+END_SRC

#+RESULTS:
[[file:oplus-ratio-contour.pdf]]

+ So, there are two density regimes: < 100 pcc and > 1e4 pcc, where it is constant with density
  + But for 100 \to 10000 pcc, the 7330 lines get stronger with density by a factor of about 3, which has the same effect on the ratio as about a 20% increase in T
    + Why is that?
  + Then, above 1e6 pcc, the collisional de-excitation kicks in and 7330 goes down again


+ I repeated for the 7320 line, instead of 7330, but it is extremely similar
  + So, I am not showing it any more


*** We can also look at density from [Fe III] 4702/4658

+ The map goes between about 0.2 and 0.4
+ The high ratios are fine, corresponding to about 3e4 pcc
+ But the low ratios are less than theoretical low-density limit, which is more like 0.25
  + Could be that sky subtraction matters
  + Or could be that A-values are not right
#+BEGIN_SRC python :eval no :tangle fe3-ratio-contour.py
  from __future__ import print_function
  import sys
  import numpy as np
  import pyneb as pn
  import matplotlib.pyplot as plt
  import matplotlib as mpl
  import seaborn as sns

  fe3 = pn.Atom('Fe', 3)

  Ts = np.linspace(4000, 20000, 100)
  Ds = 10**np.linspace(1.0, 5.0, 200)

  def ratio_4702_4658(tem, den):
      em4702 = fe3.getEmissivity(tem, den, wave=4701.53)
      em4658 = fe3.getEmissivity(tem, den, wave=4658.05)
      return em4702/em4658


  figfile = sys.argv[0].replace('.py', '.pdf')

  ratios = ratio_4702_4658(Ts, Ds)
  levels = np.linspace(0.24, 0.40, 17)
  fig, ax = plt.subplots(figsize=(6, 6))

  Ts = Ts[:, None]*np.ones_like(ratios)
  Ds = Ds[None, :]*np.ones_like(ratios)

  #ax.contour(Ts, Ds, Ds, levels=[100, 10000, 1e6], cmap='magma_r')
  c = ax.contour(Ds, Ts, ratios,
                 levels=levels,
                 cmap='tab20b_r', linewidths=3)
  # ax.clabel(c, levels[1::2], fontsize='x-small',
  #           inline=False, rightside_up=True, use_clabeltext=True)
  cb = fig.colorbar(c, orientation='horizontal')
  cb.set_label("[Fe III] 4702 / 4658")

  ax.set(
      ylabel="Temperature, K",
      xlabel="Density, cm$^{-3}$",
      xscale='log',
  )
  sns.despine()
  fig.tight_layout()
  fig.savefig(figfile)
  print(figfile, end='')
#+END_SRC

#+BEGIN_SRC sh :results file
source activate pyneb27
python fe3-ratio-contour.py
#+END_SRC

#+RESULTS:
[[file:fe3-ratio-contour.pdf]]

** TODO Look at O I 7773 recombination line
+ From Jorge García's talk
+ O I triplet at 7771 + 73 + 74 \AA
+ Supposedly a recombination line
+ I think we have it in the MUSE data
+ This is in wavelength section 5
+ [ ] It is also in Adal's slits
+ Strangely, the MUSE maps show it strong from some proplyds and other stars
  + Maybe it is a strong line in T Tauri stars
  + Best detection is in 159-350, where it is very strong and with an absorption on its red wing at 7780 \AA
    + Perhaps it is an inverse P Cygni profile - would require 270 km/s infall, which is a bit high
    + or maybe there is another photospheric line at 7780 \AA
    + I should check on Adal's slit - I think he crosses this star
*** DONE First impressions
CLOSED: [2017-10-24 Tue 17:56]
+ Line clearly detected
+ Contaminated by night sky, which needs to be dealt with
+ To first order, looks like [O II] 7330
  + /Except/ it is missing some features:
    1. Narrow bright bar completely missing
    2. Orion S high-Te region is much weaker (not a surprise)
    3. HH 202 is weaker I think
*** TODO [4/5] Steps to reduce MUSE 7773 line
+ [X] Extract line
+ [X] Extract line better (turns out there is another line at 7780, which means that we can't get a continuum level on the red side of the line)
+ [X] Deal with night sky component
  + Needs to be done panel by panel
  + Maybe use [O I] 5577 - *no, it is too different*
  + Work from outside \to inside and look for jumps between tiles
  + Now has its own [[id:7B9FD891-B48F-47D7-AB5A-BC65724FA5C7][section]]
+ [X] Multi-binning
  + [X] Repeat for new sky subtraction
+ [ ] Fuzzing
  + [ ] Repeat for new sky subtraction
  + Need to ship to server
** DONE Remove night sky from MUSE O I 7773
CLOSED: [2017-10-27 Fri 19:15]
:PROPERTIES:
:ID:       7B9FD891-B48F-47D7-AB5A-BC65724FA5C7
:END:
+ This is a bit similar to the pattern noise reduction that I did for the line width project, as described in [[file:~/Dropbox/depattern-maps/]]
+ One possibility is to plot velocity against brightness for each tile and fit a model that is
  + V(B) = B_sky V_sky + V_neb (B - B_sky)
  + V, B are observed velocity, brightness in each pixel
  + V_sky is the velocity of sky component (0 km/s topocentric)
  + V_neb is the mean nebular velocity (about 25 km/s heliocentric for low ionization zone)
    + We could either take this constant over all tiles ...
    + ... or even take it from the red [O II] lines
  + B_sky is *what we solve for* in each tile
+ Simpler solution would be to look for a constant to subtract from each tile
  + Try this first

#+BEGIN_SRC python :eval no :tangle sky-tile-hist.py
  import sys
  import os
  import numpy as np
  from astropy.io import fits
  from astropy.modeling import models, fitting
  from matplotlib import pyplot as plt
  import seaborn as sns

  try: 
      infile = sys.argv[1]
  except:
      sys.exit('Usage: {} FITSFILE'.format(sys.argv[0]))


  basename = os.path.basename(infile)
  baseroot, _ = os.path.splitext(basename)
  figfile = f"{sys.argv[0]}-{baseroot}.pdf"

  hdu = fits.open(infile)[0]
  if hdu.data is None:
      hdu = fits.open(infile)[1]
  hdr = hdu.header

  ny, nx = hdu.data.shape

  # Size of chunks
  mx, my = 290, 290
  xchunks, ychunks = nx//mx, ny//my


  fig, axes = plt.subplots(ychunks, xchunks,
                           sharex=True, sharey=True,
                           figsize=(10, 10),
  )


  hdu.data /= 1000.0

  m = np.isfinite(hdu.data)
  vmin, vmax = np.percentile(hdu.data[m], [1.0, 99.0])
  vrange = vmax - vmin
  vmin -= 0.3*vrange
  vmax += 0.3*vrange

  m = m & (hdu.data >= vmin) & (hdu.data <= vmax)

  fitter = fitting.LevMarLSQFitter()
  for jchunk in range(ychunks):
      yslice = slice(jchunk*my, jchunk*my + my)
      for ichunk in range(xchunks):
          xslice = slice(ichunk*mx, ichunk*mx + mx)

          mm = m[yslice, xslice]
          tile = hdu.data[yslice, xslice][mm]
          ax = axes[ychunks - jchunk - 1, ichunk]
          hist, edges, _ = ax.hist(tile, bins=100, range=[vmin, vmax])
          centers = 0.5*(edges[:-1] + edges[1:])


          a0 = hist.max()
          v0 = np.mean(tile)
          vmedian = np.median(tile)
          s0 = np.std(tile)
          g_init = models.Gaussian1D(amplitude=a0, mean=v0, stddev=s0)
          select = hist > 0.3*a0
          g = fitter(g_init, centers[select], hist[select])
          ax.plot(centers, g(centers), c='r', lw=0.5)
          # ax.plot(centers, g_init(centers), c='g')

          ax.axvline(0.0, c='k', alpha=0.5)
          ax.axvline(vmedian, c='r', alpha=1.0)

          s = f"peak = {g.mean.value:.2f}\nstd = {g.stddev.value:.2f}"
          ax.text(0.95, 0.95, s,
                  ha='right', va='top',
                  fontsize='xx-small',
                  transform=ax.transAxes)

  fig.savefig(figfile)
  print(figfile, end='')
#+END_SRC

#+BEGIN_SRC sh :results file
python sky-tile-hist.py LineMaps/linesum-O_I-7773.fits
#+END_SRC

#+RESULTS:
[[file:sky-tile-hist.py-linesum-O_I-7773.pdf]]

+ That seems to work well
+ Dark tiles (no nebula) should have std \approx 3 
+ Decisions by row
  + First row all look the same, so use left one (dark on other maps)
    + Actually better to linearly interpolate between two ends
  + Second row all same except last one that is lower
  + Third row all same except last that is brighter
    + But first tile has some nebula in it
      + Perhaps I should use 1.5 instead of 1.76
      + But not for the moment
  + Fourth row has clear step pattern on right, but first 3 look the same
    + Again there is problem that there is nebula in them
  + Fifth row also linear progression
+ So this is the table that I come up with
  + Have to remember to flip the y-axis when applying to the image
+ That worked ok, but I am going to make some hand adjustments
  + Subtracted 0.1 from all top row since I seemed to over subtract there
  + Same for last one on 2nd row
  + Third row over-subtracting first 5
  + Fourth row tiles 3 and 4 are over subtracted
  + Last row is fine

#+name: sky-tiles-7773
| 1.92 | 2.04 | 2.16 | 2.28 | 2.40 | 2.52 |
| 2.87 | 2.87 | 2.87 | 2.87 | 2.87 | 2.21 |
| 1.66 | 1.66 | 1.66 | 1.66 | 1.66 | 2.52 |
| 2.43 | 2.93 | 1.66 | 0.81 | 1.93 | 2.25 |
| 2.64 | 2.70 | 2.76 | 2.82 | 2.88 | 2.94 |

#+header: :var skytab=sky-tiles-7773 mapname="linesum-O_I-7773"
#+BEGIN_SRC python
  import numpy as np
  from astropy.io import fits

  infile = f"LineMaps/{mapname}.fits"

  hdu = fits.open(infile)[0]
  if hdu.data is None:
      hdu = fits.open(infile)[1]
  hdr = hdu.header

  ny, nx = hdu.data.shape

  # Size of chunks
  mx, my = 292, 292
  xchunks, ychunks = nx//mx, ny//my
  # Margin of unused pixels
  marginx, marginy = 4, 2

  for jchunk in range(ychunks):
      yslice = slice(jchunk*my + marginy, jchunk*my + marginy + my)
      for ichunk in range(xchunks):
          xslice = slice(ichunk*mx + marginx, ichunk*mx + marginx + mx)
          skylevel = 1000.0*skytab[ychunks - jchunk - 1][ichunk]
          hdu.data[yslice, xslice] -= skylevel

  # Mask out scar artefacts
  hdu.data[292:302, 580:] = np.nan
  hdu.data[870:877, 300:1380] = np.nan

  hdu.writeto(infile.replace('.fits', '-nosky.fits'), overwrite=True)
#+END_SRC

#+RESULTS:
: None

+ OK, that /looks/ like it worked OK
  + File has a ~-nosky~ suffix
+ There still might be a problem with the fourth row
  + We will see when we take the ratio
+ [2017-10-28 Sat] I think my chunks aren't quite lined up right
  + It gives a box pattern in the subtracted image
  + It looks like the full field is 1754 x 1462
    + 1754 / 6 = 292 rem 2
    + 1464 / 5 = 292 rem 4
  + Whereas we were using 290 for the chunk size
    + [X] /So, try using 292 instead/
    + Also, we should start at (4, 2) because there is a border of NaNs
  + That works better, but we still have a couple of horizontal artefacts: I will call them *scars*
    + These are present on the original image, and are at boundaries between chunks, but they aren't due to something I have done
    + I can remove them later by interpolating, or by just masking them out when I do the binning
      + [X] Actually, best to mask it out now and replace with NaN
      + Lower linear scar is [yslice, xslice] = [282:316, 580:]
      + Upper linear scar is [yslice, xslice] = [862:885, 300:1380]

** TODO Redo the fuzzing and binning for the sky-subtracted line
+ How are we going to do that with the fuzzing?
  + We could make a correction file by subtracting the ~nosky~ version from the original
  + And then we could make the programs always look for a correction file and apply it (if it exists) before doing binning and fuzzing
+ First we just to the line itself
  #+BEGIN_SRC sh :results verbatim
    D=../multibin-maps
    time python $D/multibin-map.py LineMaps/linesum-O_I-7773-nosky.fits
  #+END_SRC

  #+RESULTS:
  : Saving LineMaps/linesum-O_I-7773-nosky-bin001.fits
  : Saving LineMaps/linesum-O_I-7773-nosky-bin002.fits
  : Saving LineMaps/linesum-O_I-7773-nosky-bin004.fits
  : Saving LineMaps/linesum-O_I-7773-nosky-bin008.fits
  : Saving LineMaps/linesum-O_I-7773-nosky-bin016.fits
  : Saving LineMaps/linesum-O_I-7773-nosky-bin032.fits
  : Saving LineMaps/linesum-O_I-7773-nosky-bin064.fits
  : Saving LineMaps/linesum-O_I-7773-nosky-bin128.fits
  : Saving LineMaps/linesum-O_I-7773-nosky-bin256.fits
+ And have a first look at ratio
  #+BEGIN_SRC sh :results verbatim
    python ../OrionMuse/muse_line_ratio.py O_I-7773-nosky O_II-7330 linesum bin016
  #+END_SRC

  #+RESULTS:
  : LineMaps/linesum-O_I-7773-nosky-bin016.fits LineMaps/linesum-O_II-7330-bin016.fits
+ This looks great - it is very similar to the [N II] temperature
  + Here is a [[file:Screenshot%202017-10-28%2015.48.41.png][screenshot]]
  + In the bar, the T increase is on neutral side of i-front
+ Next question, what is [[id:01887326-EFF3-4C42-ABEB-9EC5056B0947][theoretical value]]?
  + That is now done

+ Here, we make the ~-correction.fits~ file
#+header: :var mapname="linesum-O_I-7773"
#+BEGIN_SRC python
  import numpy as np
  from astropy.io import fits

  infile = f"LineMaps/{mapname}.fits"

  hdu = fits.open(infile)[0]
  hdu_nosky = fits.open(infile.replace(".fits", "-nosky.fits"))[0]
  hdu.data -= hdu_nosky.data
  hdu.writeto(infile.replace('.fits', '-correction.fits'), overwrite=True)
#+END_SRC

#+RESULTS:
: None

+ [X] Modify the fuzzing program to use the ~-correction.fits~ file
+ [X] Copy ~-correction.fits~ file to server
  #+BEGIN_SRC sh :results verbatim
  rsync -avzPL LineMaps/linesum-O_I-7773-correction.fits nil:/fs/nil/other0/will/orion-muse/LineMaps
  #+END_SRC

  #+RESULTS:
  : sending incremental file list
  : 
  : sent 79 bytes  received 11 bytes  180.00 bytes/sec
  : total size is 10,431,360  speedup is 115,904.00

+ [X] re-run it all for this line
  #+BEGIN_SRC sh :eval no
  time python extract-em-line-fuzz.py 7773 10  
  #+END_SRC
+ [ ] And do the ratio


** List of ratios: line-ratio-list-orl.tab
:PROPERTIES:
:TABLE_EXPORT_FILE: line-ratio-list-orl.tab
:TABLE_EXPORT_FORMAT: orgtbl-to-tsv
:END:
+ Export with =C-c t e= after editing
+ The =Group= column is to allow selecting certain subsets of the ratios for recalculation as needed
+ The full list from the MUSE project is [[id:026A1878-E6AC-4E5B-8180-AEE71DC9C829][here]]
+ Copy to server
+ Run as 
  #+BEGIN_SRC sh :eval no
  python ratios-from-table.py -orl
  #+END_SRC

#+name: line-ratio-list-orl
| Group  | Numerator | Denominator | Comment             |
|--------+-----------+-------------+---------------------|
| O plus | O_I-7773  | O_II-7730   | T (and N) sensitive |


** TODO Looking at all the MUSE O II and N II lines
+ These are in better shape than I thought
+ We should be able to get the O II V1 multiplet in three parts:
  1) 4642+39
     - cleanly extracted
     - but blended with N III and N II
  2) 4649+51
     - very badly extracted 
     - we will need to fit gaussians I think
     - to get densities, we need to discriminate 49 from 51
  3) 4674+76
     - a bit weak, but extracted OK
     - except that it is affected by the He II 4686 absorption
     - so best to use gaussians
+ Ratio 4642/5007 shows peak along rim of Big Arc
+ N II lines
  + 4607 is badly contaminated with [Fe III]
  + 4631 is OK but noisy
  + 4803 is weak and only to W of Trap
  + 5667, 5680 are similar (*multiplet 3*)
    + (combination of several components)
    + Additional weaker ones at 5686, 5711
    + Look similar to 4642, except for inner bits
    + 5680 could maybe used to remove N II from 4642
      + Recomb coeffs are in Pequignot et al 1991
      + Around 1.4e-13 (Case B) for 5680
      + But /doesn't give/ 4642
      + Fang 2011 has them too
      + Looks like *5680/5667 is a density indicator*
        + R = 2 => 1e4 pcc
        + R = 1.5 => 1e3 pcc
        + [X] Ratio needs maps to be binned
        + I get a gradient from about 1.7 to 1.4 from center to outskirt of the nebula.  But I have to bin it an awful lot
  + 5942 is clearly different and may have fluorescent component
*** [4/5] Fuzzing and constant SNR will need to be done on the server
+ This needs the original data cubes, so I can't do it easily on laptop
+ Easiest approach may be to generate a new version of the line list
**** DONE Selected line list
CLOSED: [2017-10-26 Thu 09:41]
:PROPERTIES:
:TABLE_EXPORT_FILE: basic-line-list.tab
:TABLE_EXPORT_FORMAT: orgtbl-to-tsv
:ID:       B0593798-2E01-499E-965C-1E4A78025834
:END:

+ This is the lines from the [[id:30F9E738-EE31-4C62-B5CA-CE103485A481][big list]] that we are using in this project
+ Write to file with ~C-c t e~
| Ion    | Class |     wav0 | strength | blue cont | red cont | comment                      |
|--------+-------+----------+----------+-----------+----------+------------------------------|
| O II   | P     |  4641.81 |        4 |         1 |        0 | blend N III + N II           |
| O II   | P     |  4650.00 |        4 |         1 |        0 | blend 4649.13,50.84          |
| O II   | P     |  4676.24 |        5 |         1 |        1 | blend with 4673.73           |
|--------+-------+----------+----------+-----------+----------+------------------------------|
| O II   | P     |  5433.49 |        6 |         1 |        1 |                              |
| O II   | P     |  6501.40 |        7 |         1 |        0 | *** and 6500.83, 6501.42     |
| O II   | P     |  6509.80 |        7 |         0 |        1 | *** and 6509.711, 6510.61    |
| O II   | P     |   7340.7 |        5 |         0 |        1 | Or N II 7338.6               |
| O II   | P     | 7369.029 |        6 |         1 |        0 | blend C II 7370.0            |
|--------+-------+----------+----------+-----------+----------+------------------------------|
| [O II] | M     |  7318.39 |        1 |         1 |        1 | Also 7319.99                 |
| [O II] | M     |  7329.66 |        1 |         0 |        1 | Also 7330.73                 |
|--------+-------+----------+----------+-----------+----------+------------------------------|
| O I    | L     |  7773.37 |        5 |         1 |        0 | *** Mean 71.94,74.17,75.39   |
|--------+-------+----------+----------+-----------+----------+------------------------------|
| N II   | P     |  4607.16 |        4 |         1 |        1 | blend [Fe III], O II 4609.44 |
| N II   | P     |  4630.54 |        4 |         1 |        0 |                              |
| N II   | P     | 4803.287 |        4 |         1 |        1 | blend [Co II] 4802.36        |
|--------+-------+----------+----------+-----------+----------+------------------------------|
| N II   | P     | 5666.629 |        5 |         1 |        1 | multiplet 3  (contam low?)   |
| N II   | P     |  5676.02 |        6 |         0 |        0 | *** multiplet 3  - no good c |
| N II   | P     | 5679.558 |        5 |         1 |        1 | multiplet 3                  |
| N II   | P     |  5686.21 |        6 |         0 |        1 | *** multiplet 3              |
| N II   | P     |  5711.06 |        6 |         1 |        1 | *** multiplet 3              |
|--------+-------+----------+----------+-----------+----------+------------------------------|
| N II   | P     |  5927.82 |        5 |         1 |        0 | ***                          |
| N II   | P     |  5931.78 |        4 |         0 |        1 | Blend with 5927.81           |
| N II   | P     |  5941.65 |        4 |         0 |        1 | Blend with 5940.24           |
| N II   | P     |  5952.39 |        4 |         1 |        0 | All multiplet 28             |
|--------+-------+----------+----------+-----------+----------+------------------------------|
| C II   | P     |  6151.43 |        5 |         1 |        0 | V16.04, pure recomb          |
| C II   | P     |  6461.95 |        6 |         1 |        1 | V17.04 Pure recomb           |

+ Ship to server
#+BEGIN_SRC sh :results verbatim
  date
  rsync -avzPL --info=progress0 basic-line-list.tab nil:/fs/nil/other0/will/orion-muse
#+END_SRC

#+RESULTS:
: Wed Oct 25 23:39:11 CDT 2017
: sending incremental file list
: basic-line-list.tab
: 
: sent 247 bytes  received 46 bytes  195.33 bytes/sec
: total size is 1,028  speedup is 3.51

+ Note that this overwrites the big file on the server with this small one, so if we want to do the long list of lines again, we have to [[id:E29DD76D-0B11-4F52-8B50-8967046D2F0C][re-sync]] from the ~OrionMuse~ project

**** DONE Fuzzing the selected lines on server
CLOSED: [2017-10-25 Wed 23:29]
+ Run this on ~nil~
  #+BEGIN_SRC sh :eval no
  python extract-em-line-fuzz.py
  #+END_SRC
+ [2017-10-25 Wed 17:55] Started running (after fixing bugs)
  + It is taking a minute or two per emission line, so it will be a while
+ [2017-10-25 Wed 18:35] finished now, in fact a while ago (so it is just over one minute per line, when doing 10 fuzzes)


***** DONE Updating ~extract-em-line-fuzz.py~
CLOSED: [2017-10-25 Wed 17:58]
+ It seems that I made some changes in Dec/Jan 2016/17 to the ways the lines are extracted
  + This changed the API for some of the utility functions
  + I removed all the heliocentric part
  + And replaced it with something simpler
  + This seems to have been motivated by the line widths project, but I don't remember exactly why
+ Anyhow, upshot is that ~extract-em-line-fuzz.py~ need updating to use new API
  + I can use as a guide the diffs for ~OrionMuse~ commit ~6b95fea~, where I did equivalent changes to ~extract-em-line.py~


**** DONE Multibinning all the fuzzed files
CLOSED: [2017-10-25 Wed 23:47]
+ Just doing the following to start with 
  #+BEGIN_EXAMPLE
  O_I-7773 O_II-4642 O_II-4676 N_II-5667 N_II-5680 C_II-6151 C_II-6462
  #+END_EXAMPLE
+ Used 
  #+BEGIN_SRC sh
  time python $D/multibin-map.py LineMaps/linesum-O_I-7773.fits
  #+END_SRC
  and similar to do the base map
+ And 
  #+BEGIN_SRC sh
  time sh one-line-fuzz-multibin.sh C_II-6151
  #+END_SRC
  for the fuzzed versions

**** DONE Calculate noise and s/n ratio
CLOSED: [2017-10-26 Thu 09:29]
+ Calculate s/n (example)
  #+BEGIN_SRC sh
  time python multibin-signal-to-noise.py linesum-N_II-5680
  #+END_SRC
+ Generate masks (example for s/n=5)
  #+BEGIN_SRC sh
  python multibin-mask-s-n.py linesum-O_I-7773 5
  #+END_SRC
+ Combine images (example)
  #+BEGIN_SRC 
  python multibin-combine-s-n.py linesum-O_I-7773 5  
  #+END_SRC
+ Copy them to laptop (example)
  #+BEGIN_SRC sh
  rsync -avzPL nil:/fs/nil/other0/will/orion-muse/LineMaps/linesum-O_I-7773-multibin-SN*.fits LineMaps  
  #+END_SRC
+ This is really calling out to be better automated


**** TODO Do the same for ratios
*** DONE Initial work on MUSE lines
CLOSED: [2017-10-26 Thu 10:58]
**** Extra comments 2019 April
+ The Fe II 4905 line is probably something else
  + It looks like a typical inner fluorescent pattern
+ The Si lines are also worth looking at
**** Doing the multibinning in situ
Can do this on laptop
#+BEGIN_SRC sh :eval no :tangle selected-multibin.sh
  D=../multibin-maps
  for line in Ni_IV-5820 N_II-5680 N_II-5667 N_II-5942 O_II-4642 O_II-4676 O_I-7773 C_II-6462 C_II-6780; do
      python $D/multibin-map.py LineMaps/linesum-$line.fits
  done
#+END_SRC
Run in terminal

#+BEGIN_SRC sh
  python ../OrionMuse/muse_line_ratio.py N_II-5667 N_II-5942 linesum bin256
#+END_SRC

#+RESULTS:
: LineMaps/linesum-N_II-5667-bin256.fits LineMaps/linesum-N_II-5942-bin256.fits

#+BEGIN_SRC sh
  python ../OrionMuse/muse_line_ratio.py N_II-5680 N_II-5667 linesum bin256
#+END_SRC

#+RESULTS:
: LineMaps/linesum-N_II-5680-bin256.fits LineMaps/linesum-N_II-5667-bin256.fits

#+BEGIN_SRC sh
  python ../OrionMuse/muse_line_ratio.py O_II-4642 O_III-5007 linesum bin032
#+END_SRC

#+RESULTS:
: LineMaps/linesum-O_II-4642-bin032.fits LineMaps/linesum-O_III-5007-bin032.fits

#+BEGIN_SRC sh
  python ../OrionMuse/muse_line_ratio.py O_I-7773 O_II-7330 linesum bin032
#+END_SRC

#+RESULTS:
: LineMaps/linesum-O_I-7773-bin032.fits LineMaps/linesum-O_II-7330-bin032.fits
**** Copying some stuff from linux server
#+BEGIN_SRC sh :results verbatim
  date
  rsync -avzPL --info=progress0 nil:/fs/nil/other0/will/orion-muse/LineMaps/linesum-{O_II-4642,O_II-4650,O_II-4676,O_I-7773,O_II-5433,O_II-6501,O_II-6510,O_II-7318,O_II-7330,O_II-7341,O_II-7369,N_II-4607,N_II-4631,N_II-4803,N_II-5667,N_II-5680,N_II-5942,C_II-6462}.fits LineMaps
  rsync -avzPL --info=progress0 nil:/fs/nil/other0/will/orion-muse/LineMaps/linesum-{O_III-5007,O_II-7330,C_II-7231,C_II-7236}-bin{004,008,016,032}.fits LineMaps
  rsync -avzPL --info=progress0 nil:/fs/nil/other0/will/orion-muse/muse-hr-image-wfc3-f547m.fits .
#+END_SRC

#+RESULTS:
#+begin_example
Wed Oct 25 19:59:43 CDT 2017
receiving incremental file list

sent 11 bytes  received 410 bytes  168.40 bytes/sec
total size is 187,764,480  speedup is 445,996.39
receiving incremental file list
linesum-C_II-7231-bin004.fits
linesum-C_II-7231-bin008.fits
linesum-C_II-7231-bin016.fits
linesum-C_II-7231-bin032.fits
linesum-C_II-7236-bin004.fits
linesum-C_II-7236-bin008.fits
linesum-C_II-7236-bin016.fits
linesum-C_II-7236-bin032.fits
linesum-O_II-7330-bin004.fits
linesum-O_II-7330-bin008.fits
linesum-O_III-5007-bin004.fits
linesum-O_III-5007-bin008.fits
linesum-O_III-5007-bin016.fits

sent 258 bytes  received 7,091,003 bytes  429,773.39 bytes/sec
total size is 704,793,600  speedup is 99.39
receiving incremental file list

sent 11 bytes  received 82 bytes  37.20 bytes/sec
total size is 10,558,080  speedup is 113,527.74
#+end_example

** Maybe even do the Si II lines?

** TODO Finishing off the Manu data analysis

** TODO Finishing off the Adal data analysis
* Possible explanations for ADF, etc
+ Note that ADF, t-squared and T_{4363/5007} - T_{V1/5007} are all the same thing observationally 
+ Recombination rate inaccuracies
  + Gary is very keen on this
  + Says that nobody understands DR properly
  + Something about the levels below (or was it above?) threshold that are not being accounted for (not sure exactly what he said)
  + Says that "someone or other" agrees with him (presumably a famous atomic physicist, but I don't remember the name)
  + Seems to me that this can only explain a wholesale shift in the ADF values, and not spatial variations in them
+ Fluorescence contribution
  + Vladimir has some calculations I think
  + This is certainly seen in the C II V3 multiplet: 7231, 36 lines
    + Should compare with the 6462 line, which is the best-looking of all the pure-recombination C II lines in MUSE
      + We can subtract a scaled 6462 from the 7231 and 7236 so we just leave the fluorescent contribution
      + Then we can do the same but subtracting scaled 5007 from 4651
        + Although the latter needs to be corrected for temperature since it is a CEL
    + Although Manu and Adal has 4267, which is much better
+ Metallicity variations
  + There will be slight enhancements in O when grains are destroyed
    + For instance, Adal's work on HH 202
    + Also, newer stuff by José Espíritu, Gloria Delgado, Antonio P
    + Also, earlier Adal 2008 paper had something similar for HH 203/204
    + This should give correlation with Fe enhancement
      + So need to find a line ratio that is diagnostic of Fe abundance
      + This is difficult because most ratios are more sensitive to ionization
      + In the Manu work I had tried [Fe III] / ([S II] + [S III]) which worked OK
+ Underlying stellar absorption lines
  + Scattered light gives about half the continuum in Orion, so any stellar absorption lines will show up in the nebula, and might reduce the apparent strength of weak emission lines
  + This is particularly a problem for the O II lines, since they are quite strong in absorption in the O star spectra
    + Especially the O9/B0 stars: \theta^2 A, \theta^1 A and D, where O II 4651 is similar absorption depth to He II 4686, or about 0.1
    + In \theta^1 C, it is not so bad: depth of about 0.06 in He II 4686 (but depends on orbital phase!) and 0.03 in the O II lines
      + Note that Adal's spectra show *zero* He II 4686 absorption, weirdly
    + In the nebula, this is down to 0.04 for He II (presumably because of dilution)
    + Which implies 0.02 for O II, which is around 5-10% of the O II emission lines

* Guide to all my previous work
+ Figures that I am gathering from other places are in [[file:copied-figs/]] 
** General musings
+ I have a lot of discussion in the org file [[file:~/Work/RubinWFC3/Tsquared/recomb-lines.org][file:~/Work/RubinWFC3/Tsquared/recomb-lines.org]]
  + For example [[id:DE843C1D-0502-4DB0-8C49-538DAC045AF6][Fluorescence vs recombination for the permitted lines]]
    + where I draw on some of Vladimir's papers, but don't come to any firm conclusions
    + Although I note that the 4591 line gives an ADF of zero
+ 
** Ratios that should stay the same in the V1 multiplet
+ Theoretical ratios
  + 4642 / (4639+49+51+62) = 0.32
  + 4674 / (4639+49+51+62) = 0.13
  + 4676 / (4639+49+51+62) = 0.02
+ Manu spectra [[file:copied-figs/oii-insensitive-blue.pdf]]
  + Discussed in [[file:~/Work/RubinWFC3/Tsquared/Manu%20Spectra.ipynb][file:~/Work/RubinWFC3/Tsquared/Manu Spectra.ipynb]]
  + Need to add 43% N II + N III contamination to the 4642 line 
+ Adal spectra [[file:copied-figs/oii-insensitive-adal-slit6.pdf]]
  + Discussed in [[file:~/Work/RubinWFC3/Tsquared/Adal%20spectra.ipynb][file:~/Work/RubinWFC3/Tsquared/Adal spectra.ipynb]]
  + No need for correction for N II but N III is still blended - could maybe be resolved by fitting gaussians
** Density-sensitive ratios
+ He I 5876/6678 ratio
  + Trouble is, the MUSE maps show that this is largely due to extinction
  + Varies from 2.8 (high extinction) to 3.6 (low extinction)
  + Adal has it other way up: 0.3 to 0.34, so a similar range
+ Manu has [Cl III] and [Ar IV] ratios, which may be more sensible
  + [[file:copied-figs/oii-density-compare.pdf]]
  + [[file:copied-figs/oii-density-vs-radius.pdf]]
  + [[file:copied-figs/oii-vs-cliii-densities.pdf]]
    + Strangely, O II densities are lower than [Cl III] densities by factor of 2 to 4
** Temperature-sensitive ratios
+ Adal spectra with binning has lots of plots, such as
  + [[file:copied-figs/oii-t-orlcel-vs-cel-adal-bin.png]]
  + [[file:copied-figs/oii-t-orl-vs-cel-adal-bin.png]]
+ Manu spectra
  + [[file:copied-figs/oii-oiii-temperature-masked.pdf]]
    + We could annotate this with the CEL temperature
  + [[file:copied-figs/oii-oiii-temperature.pdf]]
  + [[file:copied-figs/oii-temperature-three-vs-radius.pdf]]
+ The comparison of T(ORL-CEL) with T(CEL) is consistent with a 10% difference between the two
+ The T(ORL) values from O II V1 4649 / V 15 4591 are strange
  + The ratio *falls* with radius for Manu data, which indicates that
    T is climbing!
    + Observed values \approx 10 at 30 arcsec, falling to 5 at 100 arcsec
    + Implying T rises from 3000 K to 7000 K
  + But Adal results are a /bit/ more sensible
    + There is a jump in the CEL T at the edge of Orion-S, with Orion S having a higher 4363/4959
    + It also has a lower V1/4959, consistent with higher T
    + And a lower 4649/4591 (about 6 => T = 5000 K)
    + Whereas directly below Trap has 4649/4591 = 9 => T = 4000 K
    + Equivalent T(CEL) are 8700 and 8400 K
+ *But note that these all need de-reddening*
+ Other T-sensitive ORL ratios are
  + 4649/4189
    + Looks like we can see it clearly in Manu spectra - not sure why I haven't measured it
  + 4649/4089
    + Affected by various blends - especially Si IV 4088.86 \AA 
